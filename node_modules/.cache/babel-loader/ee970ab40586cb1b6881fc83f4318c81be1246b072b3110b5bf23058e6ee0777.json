{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\udemy-clone-react\\\\src\\\\components\\\\header\\\\SignupForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport \"./SignupForm.css\"; // Create this CSS file for styling the modal\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupForm({\n  isOpen,\n  onRequestClose\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const handleSignup = () => {\n    // Handle signup logic here\n    // You can send this data to your backend or handle it as needed\n    console.log(\"Username:\", username);\n    console.log(\"Email:\", email);\n    console.log(\"Password:\", password);\n    console.log(\"Role:\", role);\n\n    // Close the modal after signup\n    onRequestClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onRequestClose: onRequestClose,\n    className: \"modal\",\n    overlayClassName: \"overlay\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Role\",\n        value: role,\n        onChange: e => setRole(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignup,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"qrztweUkhHV4UpF1PDr0nUnzV3Q=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","SignupForm","isOpen","onRequestClose","_s","username","setUsername","email","setEmail","password","setPassword","role","setRole","handleSignup","console","log","className","overlayClassName","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dell/udemy-clone-react/src/components/header/SignupForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"./SignupForm.css\"; // Create this CSS file for styling the modal\r\n\r\nfunction SignupForm({ isOpen, onRequestClose }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n\r\n  const handleSignup = () => {\r\n    // Handle signup logic here\r\n    // You can send this data to your backend or handle it as needed\r\n    console.log(\"Username:\", username);\r\n    console.log(\"Email:\", email);\r\n    console.log(\"Password:\", password);\r\n    console.log(\"Role:\", role);\r\n\r\n    // Close the modal after signup\r\n    onRequestClose();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      className=\"modal\"\r\n      overlayClassName=\"overlay\"\r\n    >\r\n      <h2>Sign Up</h2>\r\n      <div className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Role\"\r\n          value={role}\r\n          onChange={(e) => setRole(e.target.value)}\r\n        />\r\n        <button onClick={handleSignup}>Sign Up</button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default SignupForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}